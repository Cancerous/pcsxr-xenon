#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh fxaa.vs.h /Tvs_3_0 fxaa.fx /Evs_fxaa
//
//
// Parameters:
//
//   float2 texels;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   texels       c0       1
//
//
// Default values:
//
//   texels
//     c0   = { 0.00078125, 0.00138889, 0, 0 };
//

// Shader type: vertex 

xvs_3_0
defconst texels, float, vector, [1, 2], c0, { 0.000781250012, 0.00138888892, 0, 0 }
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=1
config VsResource=1

dcl_index r0.x
dcl_texcoord o0

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 0.75, 0, 0, 0


    exec
    vfetch r1, r0.x, position
    vfetch r0.xy__, r0.x, texcoord
    alloc position
    exec
    mov oPos, r1
    alloc interpolators
    exece
    mad r0.zw, -c0.xxxy, c255.x, r0.xxxy
    mov o0, r0

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xvs_vs_fxaa[] =
{
    0x102a1101, 0x000000f4, 0x000000ac, 0x00000000, 0x00000024, 0x00000094, 
    0x000000bc, 0x00000000, 0x00000000, 0x0000006c, 0x0000001c, 0x0000005f, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x00000058, 0x00000030, 
    0x00020000, 0x00010000, 0x00000038, 0x00000048, 0x74657865, 0x6c7300ab, 
    0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x3a4ccccd, 0x3ab60b61, 
    0x00000000, 0x00000000, 0x76735f33, 0x5f300032, 0x2e302e32, 0x30333533, 
    0x2e3000ab, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 
    0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 
    0x0000006c, 0x00010001, 0x00000000, 0x00000000, 0x00001021, 0x00000001, 
    0x00000002, 0x00000001, 0x00000290, 0x00100003, 0x00305004, 0x0000f050, 
    0x00001007, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f400000, 0x00000000, 0x00000000, 0x00000000, 0x30052003, 
    0x00001200, 0xc2000000, 0x00001005, 0x00001200, 0xc4000000, 0x00002006, 
    0x00002200, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x05f80000, 
    0x00000fc8, 0x00000000, 0xc80f803e, 0x00000000, 0xe2010100, 0xc80c0000, 
    0x04ac6cac, 0x2b00ff00, 0xc80f8000, 0x00000000, 0xe2000000, 0x00000000, 
    0x00000000, 0x00000000
};
