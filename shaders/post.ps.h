#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh post.ps.h /Tps_3_0 post.fx /Eps_main
//
//
// Parameters:
//
//   sampler2D DiffuseSampler;
//   float3 Floor;
//   float HeightRatio;
//   float PI;
//   float PincushionAmount;
//   float3 Power;
//   float RawHeight;
//   float RawWidth;
//   float ScanlineAmount;
//   float ScanlineBrightScale;
//   float ScanlineHeight;
//   float ScanlineOffset;
//   float ScanlineScale;
//   float ShadowBrightness;
//   float ShadowHeight;
//   float ShadowMaskSizeX;
//   float ShadowMaskSizeY;
//   sampler2D ShadowSampler;
//   float ShadowU;
//   float ShadowV;
//   float ShadowWidth;
//   float TargetHeight;
//   float UseShadow;
//   float WidthRatio;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   TargetHeight        c0       1
//   RawWidth            c1       1
//   RawHeight           c2       1
//   WidthRatio          c3       1
//   HeightRatio         c4       1
//   PI                  c5       1
//   PincushionAmount    c6       1
//   ScanlineAmount      c7       1
//   ScanlineScale       c8       1
//   ScanlineBrightScale c9       1
//   ScanlineOffset      c10      1
//   ScanlineHeight      c11      1
//   UseShadow           c12      1
//   ShadowBrightness    c13      1
//   ShadowMaskSizeX     c14      1
//   ShadowMaskSizeY     c15      1
//   ShadowU             c16      1
//   ShadowV             c17      1
//   ShadowWidth         c18      1
//   ShadowHeight        c19      1
//   Power               c20      1
//   Floor               c21      1
//   DiffuseSampler      s0       1
//   ShadowSampler       s1       1
//
//
// Default values:
//
//   PI
//     c5   = { 3.14159, 0, 0, 0 };
//
//   PincushionAmount
//     c6   = { 0, 0, 0, 0 };
//
//   ScanlineAmount
//     c7   = { 1, 0, 0, 0 };
//
//   ScanlineScale
//     c8   = { 1, 0, 0, 0 };
//
//   ScanlineBrightScale
//     c9   = { 1, 0, 0, 0 };
//
//   ScanlineOffset
//     c10  = { 1, 0, 0, 0 };
//
//   ScanlineHeight
//     c11  = { 0.5, 0, 0, 0 };
//
//   UseShadow
//     c12  = { 0, 0, 0, 0 };
//
//   ShadowBrightness
//     c13  = { 1, 0, 0, 0 };
//
//   ShadowMaskSizeX
//     c14  = { 3, 0, 0, 0 };
//
//   ShadowMaskSizeY
//     c15  = { 3, 0, 0, 0 };
//
//   ShadowU
//     c16  = { 0.375, 0, 0, 0 };
//
//   ShadowV
//     c17  = { 0.375, 0, 0, 0 };
//
//   ShadowWidth
//     c18  = { 8, 0, 0, 0 };
//
//   ShadowHeight
//     c19  = { 8, 0, 0, 0 };
//
//   Power
//     c20  = { 1, 1, 1, 0 };
//
//   Floor
//     c21  = { 0, 0, 0, 0 };
//

// Shader type: pixel 

xps_3_0
defconst DiffuseSampler, sampler2d, object, [1, 1], s0
defconst Floor, float, vector, [1, 3], c21, { 0, 0, 0, 0 }
defconst HeightRatio, float, scalar, [1, 1], c4
defconst PI, float, scalar, [1, 1], c5, { 3.14159274, 0, 0, 0 }
defconst PincushionAmount, float, scalar, [1, 1], c6, { 0, 0, 0, 0 }
defconst Power, float, vector, [1, 3], c20, { 1, 1, 1, 0 }
defconst RawHeight, float, scalar, [1, 1], c2
defconst RawWidth, float, scalar, [1, 1], c1
defconst ScanlineAmount, float, scalar, [1, 1], c7, { 1, 0, 0, 0 }
defconst ScanlineBrightScale, float, scalar, [1, 1], c9, { 1, 0, 0, 0 }
defconst ScanlineHeight, float, scalar, [1, 1], c11, { 0.5, 0, 0, 0 }
defconst ScanlineOffset, float, scalar, [1, 1], c10, { 1, 0, 0, 0 }
defconst ScanlineScale, float, scalar, [1, 1], c8, { 1, 0, 0, 0 }
defconst ShadowBrightness, float, scalar, [1, 1], c13, { 1, 0, 0, 0 }
defconst ShadowHeight, float, scalar, [1, 1], c19, { 8, 0, 0, 0 }
defconst ShadowMaskSizeX, float, scalar, [1, 1], c14, { 3, 0, 0, 0 }
defconst ShadowMaskSizeY, float, scalar, [1, 1], c15, { 3, 0, 0, 0 }
defconst ShadowSampler, sampler2d, object, [1, 1], s1
defconst ShadowU, float, scalar, [1, 1], c16, { 0.375, 0, 0, 0 }
defconst ShadowV, float, scalar, [1, 1], c17, { 0.375, 0, 0, 0 }
defconst ShadowWidth, float, scalar, [1, 1], c18, { 8, 0, 0, 0 }
defconst TargetHeight, float, scalar, [1, 1], c0
defconst UseShadow, float, scalar, [1, 1], c12, { 0, 0, 0, 0 }
defconst WidthRatio, float, scalar, [1, 1], c3
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=7
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_color_centroid r1

def c252, 0, 0, 0, 0
def c253, 0, -0.5, 0.5, 0
def c254, 1, -3.14159274, 6.28318548, 0.200000003
def c255, 1.5, 0.159154937, 1, -1


    exec
    mul r2.w, c10.x, c2.x
  + muls r4.z, c4.xx
    mul r2.x, c6.x, c254.w
  + muls r3.w, c3.xx
    add r0.zw, r0.xxxy, r0.xxxy
  + rcp r3.x, c3.x
    mul r5.x, r2.x, -c3.x
  + rcp r3.y, c4.x
    mul r5.y, r2.x, -c4.x
  + rcp r3.z, c0.x
    mul r2.xyz, r3.xyz, c253.z
  + mulsc r5.z, c3.x, r0.z
    exec
    add r7.xyz, -r2.xyz, r0.xy
  + rcp r4.x, c2.x
    add r7.w, r7.z, -r2.y
  + rcp r4.y, c1.x
    add r3.xyz, r3.yxw, r4.xyz
  + mulsc r5.w, c4.x, r0.w
    add r6, r5, c255.zzw
    mul r5.xy, r6.zw, c6.x
  + rcp r0.x, r3.z
    dp2add r0.y, r6.zw, r6.zw, c253.x
    exec
    mul r0.z, r0.y, r0.x
    mad r2.xyz, r7.xyw, r6.xy, r2.xy
    mul r0.yz, r5.yyx, r0.zzy
    mul r0.x, r0.z, r0.x
  + movs r1._, c8.x
    add r2.xyz, r2.zxy, r0.yxy
  + muls_prev r0.x, c2.x
    mul r0.x, r0.x, r2.x
    exec
    sgt r3.xy, r2.zy, r3.xy
  + rcp r0.y, c18.x
    sgt r3.zw, r4.xxxy, r2.zzzy
  + rcp r0.z, c19.x
    mad r0.x, r0.x, c5.x, r2.w
    cndgt r3, r3.zyxw, c255.w, c255.z
    kill_gt r1._, c253.x, r3.w
  + mulsc r4.y, c15.x, r2.z
    kill_gt r1._, c253.x, r3.x
  + mulsc r3.x, c255.x, r0.y
    exec
    kill_gt r1._, c253.x, r3.y
  + mulsc r3.y, c255.x, r0.z
    kill_gt r1._, c253.x, r3.z
  + mulsc r3.z, c255.y, r0.x
    add r4.x, r3.z, c253.z
  + mulsc r4.z, c14.x, r2.y
    frc r0.xyz, r4.xzy
    mul r4.y, r0.z, c17.x
  + mulsc r4.x, c16.x, r0.y
    tfetch2D r2, r2.yz, tf0
    exec
    serialize
    add r3.xy, r4.xy, r3.xy
  + mulsc r0.w, c254.z, r0.x
    tfetch2D r0.xyz_, r3.xy, tf1
    alloc colors
    exec
    mul r3.x, c13.x, c12.x
    add r0.xyz, r0.xyz, c255.w
    mul r0.xyz, r3.x, r0.xyz
    add r4, r0, c254.xxxy
    mul r3.w, c9.x, c253.z
  + sin r0.x, r4.w
    muls r0.y, r0.xx
    exec
    add r0.xzw, -c21.xyyz, c255.z
  + log r0.y, r0_abs.y
    mulsc r0.y, c11.x, r0.y
    mul r3.xyz, r4.xyz, r1.xyz
  + exp r0.y, r0.y
    mad r0.y, r3.w, r0.y, c253.y
    mad r0.y, r0.y, c7.x, c255.z
    mul r4.xyz, r0.y, r2.xyz
    exec
    mad r0.xyz, r4.xyz, r0.xzw, c21.xyz
    mul r0.xyz, r3.xyz, r0.xyz
    log r0.x, r0_abs.x
    log r0.y, r0_abs.y
    log r0.z, r0_abs.z
    mul r0.xyz, r0.xyz, c20.xyz
    exece
    exp oC0.x, r0.x
    exp oC0.y, r0.y
    mul oC0.w, r2.w, r1.w
  + exp oC0.z, r0.z

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xps_ps_main[] =
{
    0x102a1100, 0x0000046c, 0x00000310, 0x00000000, 0x00000024, 0x0000041c, 
    0x00000444, 0x00000000, 0x00000000, 0x000003f4, 0x0000001c, 0x000003e5, 
    0xffff0300, 0x00000018, 0x0000001c, 0x00000000, 0x000003de, 0x000001fc, 
    0x00030000, 0x00010000, 0x0000020c, 0x00000000, 0x0000021c, 0x00020015, 
    0x00010000, 0x00000224, 0x00000234, 0x00000244, 0x00020004, 0x00010000, 
    0x00000250, 0x00000000, 0x00000260, 0x00020005, 0x00010000, 0x00000250, 
    0x00000264, 0x00000274, 0x00020006, 0x00010000, 0x00000250, 0x00000234, 
    0x00000285, 0x00020014, 0x00010000, 0x00000224, 0x0000028c, 0x0000029c, 
    0x00020002, 0x00010000, 0x00000250, 0x00000000, 0x000002a6, 0x00020001, 
    0x00010000, 0x00000250, 0x00000000, 0x000002af, 0x00020007, 0x00010000, 
    0x00000250, 0x000002c0, 0x000002d0, 0x00020009, 0x00010000, 0x00000250, 
    0x000002c0, 0x000002e4, 0x0002000b, 0x00010000, 0x00000250, 0x000002f4, 
    0x00000304, 0x0002000a, 0x00010000, 0x00000250, 0x000002c0, 0x00000313, 
    0x00020008, 0x00010000, 0x00000250, 0x000002c0, 0x00000321, 0x0002000d, 
    0x00010000, 0x00000250, 0x000002c0, 0x00000332, 0x00020013, 0x00010000, 
    0x00000250, 0x00000340, 0x00000350, 0x0002000e, 0x00010000, 0x00000250, 
    0x00000360, 0x00000370, 0x0002000f, 0x00010000, 0x00000250, 0x00000360, 
    0x00000380, 0x00030001, 0x00010000, 0x0000020c, 0x00000000, 0x0000038e, 
    0x00020010, 0x00010000, 0x00000250, 0x00000398, 0x000003a8, 0x00020011, 
    0x00010000, 0x00000250, 0x00000398, 0x000003b0, 0x00020012, 0x00010000, 
    0x00000250, 0x00000340, 0x000003bc, 0x00020000, 0x00010000, 0x00000250, 
    0x00000000, 0x000003c9, 0x0002000c, 0x00010000, 0x00000250, 0x00000234, 
    0x000003d3, 0x00020003, 0x00010000, 0x00000250, 0x00000000, 0x44696666, 
    0x75736553, 0x616d706c, 0x657200ab, 0x0004000c, 0x00010001, 0x00010000, 
    0x00000000, 0x466c6f6f, 0x7200abab, 0x00010003, 0x00010003, 0x00010000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x48656967, 
    0x68745261, 0x74696f00, 0x00000003, 0x00010001, 0x00010000, 0x00000000, 
    0x504900ab, 0x40490fdb, 0x00000000, 0x00000000, 0x00000000, 0x50696e63, 
    0x75736869, 0x6f6e416d, 0x6f756e74, 0x00506f77, 0x657200ab, 0x3f800000, 
    0x3f800000, 0x3f800000, 0x00000000, 0x52617748, 0x65696768, 0x74005261, 
    0x77576964, 0x74680053, 0x63616e6c, 0x696e6541, 0x6d6f756e, 0x7400abab, 
    0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x5363616e, 0x6c696e65, 
    0x42726967, 0x68745363, 0x616c6500, 0x5363616e, 0x6c696e65, 0x48656967, 
    0x687400ab, 0x3f000000, 0x00000000, 0x00000000, 0x00000000, 0x5363616e, 
    0x6c696e65, 0x4f666673, 0x65740053, 0x63616e6c, 0x696e6553, 0x63616c65, 
    0x00536861, 0x646f7742, 0x72696768, 0x746e6573, 0x73005368, 0x61646f77, 
    0x48656967, 0x687400ab, 0x41000000, 0x00000000, 0x00000000, 0x00000000, 
    0x53686164, 0x6f774d61, 0x736b5369, 0x7a655800, 0x40400000, 0x00000000, 
    0x00000000, 0x00000000, 0x53686164, 0x6f774d61, 0x736b5369, 0x7a655900, 
    0x53686164, 0x6f775361, 0x6d706c65, 0x72005368, 0x61646f77, 0x5500abab, 
    0x3ec00000, 0x00000000, 0x00000000, 0x00000000, 0x53686164, 0x6f775600, 
    0x53686164, 0x6f775769, 0x64746800, 0x54617267, 0x65744865, 0x69676874, 
    0x00557365, 0x53686164, 0x6f770057, 0x69647468, 0x52617469, 0x6f007073, 
    0x5f335f30, 0x00322e30, 0x2e323033, 0x35332e30, 0x00ababab, 0x00000000, 
    0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000002d0, 0x10000700, 
    0x00000008, 0x00000000, 0x00001842, 0x00010003, 0x00000021, 0x00003050, 
    0x0000f1a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0xbf000000, 0x3f000000, 0x00000000, 0x3f800000, 0xc0490fdb, 0x40c90fdb, 
    0x3e4ccccd, 0x3fc00000, 0x3e22f983, 0x3f800000, 0xbf800000, 0x00006006, 
    0x600c1200, 0x12000000, 0x00006012, 0x60181200, 0x12000000, 0x0400601e, 
    0x20241200, 0x12000006, 0x00000000, 0x6026c400, 0x12000000, 0x0000602c, 
    0x60321200, 0x12000000, 0x00003038, 0x00002200, 0x00000000, 0x08480402, 
    0x006c6c6c, 0x010a0204, 0x08810302, 0x006c1b6c, 0x0106fe03, 0x4c1c0300, 
    0x00acac6c, 0xc0000003, 0x4c210305, 0x026c6c6c, 0x81020304, 0x4c420305, 
    0x026c6c6c, 0x81020400, 0xa8470502, 0x00c0c642, 0x8103fd03, 0x4c170407, 
    0x04c0b06c, 0xc0020002, 0x4c280407, 0x02c6b16c, 0xc0070201, 0xa8870503, 
    0x001dc043, 0xc0030404, 0xc80f0106, 0x00001600, 0xa005ff00, 0x4c130005, 
    0x001a6cc6, 0xa1060603, 0xc8020100, 0x001a1a6c, 0xd10606fd, 0xc8040100, 
    0x00b16c00, 0xe1000000, 0xc8070102, 0x0010b0b0, 0xeb070602, 0xc8060100, 
    0x0061b600, 0xe1050000, 0x14010100, 0x00c66c6c, 0xc1000008, 0x0c170002, 
    0x00bebd6c, 0xc0020002, 0xc8010100, 0x006c6c00, 0xe1000200, 0x4c230003, 
    0x00b2b06c, 0xc5020312, 0x4c4c0003, 0x00ac866c, 0xc5040213, 0xc8010100, 
    0x006c6c1b, 0xab000502, 0xc80f0103, 0x00221bc6, 0x8e03ffff, 0xa8200401, 
    0x006c1b42, 0x79fd030f, 0xa8100301, 0x006c6c41, 0x59fd03ff, 0xa8200301, 
    0x006cb142, 0x59fd03ff, 0xa8400301, 0x006cc680, 0x59fd03ff, 0xa8410404, 
    0x00c6c641, 0xa003fd0e, 0xc8070100, 0x00b40000, 0xe8040000, 0xa8120404, 
    0x00c66c41, 0x81001110, 0x64082041, 0x1f1ff688, 0x00004000, 0xa8830003, 
    0x00b0b0c0, 0xc00403fe, 0x10180061, 0x1f1ffe88, 0x00004000, 0xc8010103, 
    0x006c6c00, 0x210d0c00, 0xc8070100, 0x00c01b00, 0xa000ff00, 0xc8070100, 
    0x006cc000, 0xe1030000, 0xc80f0104, 0x0000ac00, 0xa000fe00, 0xc0180003, 
    0x006cc61b, 0x2109fd04, 0x08200001, 0x0000006c, 0xe2010100, 0x402d0000, 
    0x04f0c6b1, 0x2015ff80, 0xa8200001, 0x00000041, 0xc201010b, 0x38270003, 
    0x00c0c0b1, 0xe1040100, 0xc8020100, 0x001bb1b1, 0xcb0300fd, 0xc8020100, 
    0x00b16cc6, 0x8b0007ff, 0xc8070104, 0x00b1c000, 0xe1000200, 0xc8070100, 
    0x00c014c0, 0xcb040015, 0xc8070100, 0x00c0c000, 0xe1030000, 0x40100001, 
    0x0000006c, 0xe2010180, 0x40200001, 0x000000b1, 0xe2010180, 0x40400001, 
    0x000000c6, 0xe2010180, 0xc8070100, 0x00c0c000, 0xa1001400, 0x38108000, 
    0x0000006c, 0xe2010100, 0x38208000, 0x000000b1, 0xe2010100, 0x38488000, 
    0x001b1bc6, 0xe1020100, 0x00000000, 0x00000000, 0x00000000
};
