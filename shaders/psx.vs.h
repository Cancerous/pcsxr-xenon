#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh psx.vs.h /Tvs_3_0 vs_psx.hlsl
//
//
// Parameters:
//
//   float2 screenSize;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   screenSize   c1       1
//

// Shader type: vertex 

xvs_3_0
defconst screenSize, float, vector, [1, 2], c1
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=2
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, 1, 0, 0, 0


    exec
    vfetch r2.xyz1, r0.x, position
    vfetch r0.__xy, r0.x, texcoord
    vfetch r1, r0.x, color
    alloc position
    exec
    rcp r0.x, c1.x
    mov oPos.zw, r2.zzzw
    add r2.xy, r2.xy, r2.xy
  + rcp r0.y, c1.y
    mul r0.xy, r2.yx, r0.yx
    add oPos.y, -r0.x, c255.x
  + subsc oPos.x, -c255.x, -r0.y
    alloc interpolators
    exece
    mov o0.xy, r0.zw
    mov o1, r1

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xvs_main[] =
{
    0x102a1101, 0x000000f4, 0x000000e8, 0x00000000, 0x00000024, 0x00000088, 
    0x000000b0, 0x00000000, 0x00000000, 0x00000060, 0x0000001c, 0x00000053, 
    0xfffe0300, 0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 
    0x00020001, 0x00010000, 0x0000003c, 0x00000000, 0x73637265, 0x656e5369, 
    0x7a6500ab, 0x00010003, 0x00010002, 0x00010000, 0x00000000, 0x76735f33, 
    0x5f300032, 0x2e302e32, 0x30333533, 0x2e3000ab, 0x00000000, 0x00000001, 
    0x00000000, 0x00000000, 0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000040, 0x000000a8, 0x00110002, 0x00000000, 
    0x00000000, 0x00001842, 0x00000001, 0x00000003, 0x00000002, 0x00000290, 
    0x00100003, 0x00005004, 0x0020a005, 0x00003050, 0x0001f1a0, 0x0000100b, 
    0x0000100c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x3f800000, 0x00000000, 0x00000000, 0x00000000, 0x70153003, 
    0x00001200, 0xc2000000, 0x00005006, 0x00001200, 0xc4000000, 0x0000200b, 
    0x00002200, 0x00000000, 0x05f82000, 0x00000a88, 0x00000000, 0x05f80000, 
    0x0000023f, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 0x4c100000, 
    0x0000006c, 0xc2000001, 0xc80c803e, 0x00060600, 0xe2020200, 0x4c230002, 
    0x00b0b0b1, 0xc0020201, 0xc8030000, 0x006d6d00, 0xe1020000, 0xb812803e, 
    0x056c6c41, 0x8000ffff, 0xc8038000, 0x001a1a00, 0xe2000000, 0xc80f8001, 
    0x00000000, 0xe2010100, 0x00000000, 0x00000000, 0x00000000
};
